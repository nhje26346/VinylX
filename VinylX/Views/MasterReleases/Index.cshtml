@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<VinylX.Models.MasterRelease>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AlbumName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BarcodeNumber)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.CategoryNumber) TODO:Revisit when import done
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.DiscogMasterReleaseId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ViewBag.OnePageOfItems)
        {
        <tr>
            <td>
                    @item.AlbumName
            </td>
            <td>
                    @item.BarcodeNumber
            </td>
            @* <td>
            @Html.DisplayFor(modelItem => item.CategoryNumber) TODO:Revisit when import done
            </td> *@
            <td>
                    @item.DiscogMasterReleaseId
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.MasterReleaseId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.MasterReleaseId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.MasterReleaseId">Delete</a>
            </td>
        </tr>
}
    </tbody>
    @Html.PagedListPager((IPagedList)ViewBag.OnePageOfItems, page => Url.Action("Index", new { page }))
</table>
