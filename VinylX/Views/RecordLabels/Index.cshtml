
@model PaginatedList<VinylX.Models.RecordLabel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Labelname</a>
                </th>
                <th>
                    
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Edit</a>
                <th></th>
            </tr>
        </thead>  @* <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LabelName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscogLabelId)
            </th>
            <th></th>
        </tr>
    </thead> *@
    <tbody>
            @foreach (var item in ViewBag.OnePageOfItems)
            {
        <tr>
            <td>
                @item.LabelName)
            </td>
            <td>
                @item.DiscogLabelId)
            </td>
            <td>
               @*  <a asp-action="Edit" asp-route-id="@item.RecordLabelId">Edit</a> | *@
                <a asp-action="Details" asp-route-id="@item.RecordLabelId">Details</a> |
                @* <a asp-action="Delete" asp-route-id="@item.RecordLabelId">Delete</a> *@
            </td>
        </tr>
}
    </tbody>
</table>
   @*  @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a> *@
